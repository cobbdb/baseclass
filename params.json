{"name":"Baseclass","tagline":"Lean yet robust JavaScript inheritance.","body":"# BaseClass [![Bower version](https://badge.fury.io/bo/baseclass.svg)](http://badge.fury.io/bo/baseclass) [![NPM version](https://badge.fury.io/js/baseclassjs.svg)](http://badge.fury.io/js/baseclassjs)\r\n\r\nLean yet robust JavaScript inheritance.\r\n\r\n    $ bower install baseclass\r\n    $ npm install baseclassjs\r\n\r\n-------------\r\nBaseClass is an alternative to many of the overbearing and intrusive inheritance libraries\r\nsuch as Ember and even Fiber. Code in natural JavaScript but now with the power of simple\r\ninheritance.\r\n\r\nHere's a quick example showing a typical class setup.\r\n\r\n    // Your app's library\r\n    var Pet = function (name) {\r\n        return {\r\n            name: name,\r\n            color: 'gray',\r\n            speak: function () {\r\n                console.log('Hi there!');\r\n            },\r\n            // Just add this one method to your base class and\r\n            // you're all set up! Simple as can be!\r\n            extend: BaseClass\r\n        };\r\n    };\r\n    var Dog = function (name) {\r\n        var parent = Pet(name);\r\n        return parent.extend({\r\n            color: 'black',\r\n            speak: function () {\r\n                // The parent's color is gray, which we access with this.base.\r\n                // Just use this.color to access this child's color of black if desired.\r\n                this.base.speak();\r\n                console.log(\"I'm \" + name + \" and I'm a \"  + this.base.color + ' dog.');\r\n            }\r\n        });\r\n    };\r\n\r\n    // Your app's runtime\r\n    var woofie = Dog('Woofie');\r\n    woofie.speak(); // --> Hi there! I'm Woofie and I'm a gray dog.\r\n\r\nThis inheritance chain can continue on as deep as you want it to be. To reach deeper into the\r\nchain, just use the `.base` notation. For example if you want data from two levels deep, that\r\nwould look like `child.base.base.data`.\r\n\r\nSince all properties are brought over to each child, your will always have access to an `extend`\r\nmethod to create more children.\r\n\r\n---------\r\n* See: http://cobbdb.github.io/baseclass/\r\n* See: http://github.com/cobbdb/baseclass\r\n* License: MIT\r\n","google":"UA-50240363-6","note":"Don't delete this file! It's used internally to help with page regeneration."}